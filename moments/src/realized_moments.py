
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: research/realized_moments.ipynb
import numpy as np

def realized_var(arr):
    return np.sum(np.power(arr, 2))

def realized_skew(arr):
    if arr.shape[0] == 0:
        # corner case
        return np.nan
    N = arr.shape[0] ** 0.5
    var = realized_var(arr)
    moment = np.sum(np.power(arr, 3))
    # Naive:
    return N*moment/np.power(var,1.5)
    # Move to log solution
    # logSkew=np.log(N)
    # try:
    #     logSkew=logSkew + np.log(moment)
    # except:
    #     print(moment)
    #     raise
    # logSkew = logSkew - 1.5*np.log(var)
    # return np.exp(logSkew)

def realized_kurt(arr):
    if arr.shape[0] == 0:
        # corner case
        return np.nan
    N = arr.shape[0]
    var = realized_var(arr)
    moment = np.sum(np.power(arr, 4))
    return N*moment/np.power(var,2)